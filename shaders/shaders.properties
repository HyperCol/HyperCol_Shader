oldLighting=false
oldLighting=false
underwaterOverlay = false
sun=false
moon=false
stars=false
cloud=false
vignette=false
dynamicHandLight=true

texture.noise=texture/NoiseRGWhite17OffsetBlueBA.png
texture.composite.depthtex2=texture/total.png

variable.float.texelSizeX = 1.0/viewWidth
variable.float.texelSizeY = 1.0/viewHeight
uniform.vec2.texelSize=vec2(texelSizeX,texelSizeY)

uniform.int.frameMod8 = frameCounter%8
uniform.int.frameMod16 = frameCounter%16

uniform.vec2.taaOffset16 = vec2((if( \
	frameMod16 ==  0,  1.0 /  2.0, frameMod16 ==  1,  1.0 /  4.0, \
	frameMod16 ==  2,  3.0 /  4.0, frameMod16 ==  3,  1.0 /  8.0, \
	frameMod16 ==  4,  5.0 /  8.0, frameMod16 ==  5,  3.0 /  8.0, \
	frameMod16 ==  6,  7.0 /  8.0, frameMod16 ==  7,  1.0 / 16.0, \
	frameMod16 ==  8,  9.0 / 16.0, frameMod16 ==  9,  5.0 / 16.0, \
	frameMod16 == 10, 13.0 / 16.0, frameMod16 == 11,  3.0 / 16.0, \
	frameMod16 == 12, 11.0 / 16.0, frameMod16 == 13,  7.0 / 16.0, \
	frameMod16 == 14, 15.0 / 16.0, frameMod16 == 15,  1.0 / 32.0, \
	0.0) * 2.0 - 1.0 \
) / viewWidth, \
(if( \
	frameMod16 ==  0,  1.0 /  3.0, frameMod16 ==  1,  2.0 /  3.0, \
	frameMod16 ==  2,  1.0 /  9.0, frameMod16 ==  3,  4.0 /  9.0, \
	frameMod16 ==  4,  7.0 /  9.0, frameMod16 ==  5,  2.0 /  9.0, \
	frameMod16 ==  6,  5.0 /  9.0, frameMod16 ==  7,  8.0 /  9.0, \
	frameMod16 ==  8,  1.0 / 27.0, frameMod16 ==  9, 10.0 / 27.0, \
	frameMod16 == 10, 19.0 / 27.0, frameMod16 == 11,  4.0 / 27.0, \
	frameMod16 == 12, 13.0 / 27.0, frameMod16 == 13, 22.0 / 27.0, \
	frameMod16 == 14,  7.0 / 27.0, frameMod16 == 15, 16.0 / 27.0, \
	0.0) * 2.0 - 1.0 \
) / viewHeight)

#	biome----
variable.float.biomeTem = clamp(smooth(0, temperature, 12.0, 12.0), 0.0, 1.0)
variable.float.biomeRainfall = clamp(smooth(3, rainfall, 12.0, 12.0), 0.0, 1.0)
variable.float.biomeRS = if(\
	temperature > 0.95, 0.0, \
	temperature < 0.15, 0.5, \
	(temperature >= 0.15 && temperature <= 0.95), 1.0, \
	1.0)
#uniform.float.AdjTemp = temperature
#uniform.float.AdjRainfall = clamp(min(1.0, biomeRS * 2.0), 0.0, 1.0) * AdjTemp
uniform.vec3.BiomeType = vec3(biomeRainfall, smooth(1, biomeRS, 12.0, 12.0), biomeTem)

#	vignette----
uniform.float.valLive = if(is_alive, 1.0, 0.0)
variable.float.valHurt = min(smooth(2, if(is_hurt, 1.3, 0), 0, 4), 1)
uniform.vec3.vignetteColor = vec3(0.2 * valHurt, 0.0, 0.0)

sliders=TONE BRIGHTNESS CONTRAST SATURATION VIBRANCE HUE \
COLOR_BALANCE_S_R COLOR_BALANCE_M_R COLOR_BALANCE_H_R COLOR_BALANCE_S_G COLOR_BALANCE_M_G COLOR_BALANCE_H_G COLOR_BALANCE_S_B COLOR_BALANCE_M_B COLOR_BALANCE_H_B \
DELAY FRAME_COUNTERS \
ANAMORPHIC_EDGE TRANSLUCENT_ANAMORPHIC_EDGE ANAMORPHIC_CONTRACT_SPEED TRANSLUCENT_ANAMORPHIC_CONTRACT_SPEED \
LOZENGULAR_SHADE_MIDDLE_TIME LOZENGULAR_SHADE_MIDDLE_POSITION TRANSLUCENT_LOZENGULAR_SHADE_MIDDLE_POSITION \
ROUND_SHADE_MIDDLE_TIME ROUND_SHADE_MIDDLE_POSITION TRANSLUCENT_ROUND_SHADE_MIDDLE_POSITION RAIN_SPLASH_LEVEL

screen = [ANIMATION_OPTION] [COLORFUL_TONE] *

screen.ANIMATION_OPTION = ANIMATION CORNER_MARK DELAY FRAME_COUNTERS <empty> <empty> [ANIMATION_SHADE] [ANIMATION_ROTATION]

screen.ANIMATION_SHADE = <empty> RECTANGULAR_SHADE LOZENGULAR_SHADE ROUND_SHADE WHITE_SHADE <empty> <empty> <empty> <empty> ANAMORPHIC_EDGE LOZENGULAR_SHADE_PAUSE ROUND_SHADE_PAUSE TRANSLUCENT_SHADE TRANSLUCENT_ANAMORPHIC_EDGE <empty> <empty> TRANSLUCENT_SHADE_BLUR <empty> LOZENGULAR_SHADE_MIDDLE_TIME ROUND_SHADE_MIDDLE_TIME <empty> ANAMORPHIC_CONTRACT_SPEED LOZENGULAR_SHADE_MIDDLE_POSITION ROUND_SHADE_MIDDLE_POSITION <empty> TRANSLUCENT_ANAMORPHIC_CONTRACT_SPEED TRANSLUCENT_LOZENGULAR_SHADE_MIDDLE_POSITION TRANSLUCENT_ROUND_SHADE_MIDDLE_POSITION

screen.ANIMATION_ROTATION = ROTATE ROTATING_TIME ROTATING_SCALE <empty> SHADE_ROTATE SHADE_ROTATING_TIME SHADE_ROTATING_SCALE
screen.ANIMATION_ROTATION.columns=1

screen.COLORFUL_TONE = HUE_ADJUSTMENT <empty> <empty> <empty> TONE [CUSTOM_COLOR_TONE] BLACK_AND_WHITE PRIME_RENDER FILMIC_CINEMATIC <empty> <empty>

screen.CUSTOM_COLOR_TONE=BRIGHTNESS CONTRAST SATURATION VIBRANCE HUE <empty> <empty> <empty> <empty> KEEP_BROGHTNESS <empty> <empty> <empty> <empty> <empty> COLOR_BALANCE_S_R COLOR_BALANCE_M_R COLOR_BALANCE_H_R COLOR_BALANCE_S_G COLOR_BALANCE_M_G COLOR_BALANCE_H_G COLOR_BALANCE_S_B COLOR_BALANCE_M_B COLOR_BALANCE_H_B

screen.OTHERS = *